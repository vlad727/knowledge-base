### Issue:
after build dockerfile we get an error
"no such file or directory"
but file exist and it has 


### Resoution:
Для избежания подобной ошибки рекомендуется всегда строить Go-приложения с отключённым CGO в среде вроде Alpine Linux:

```bash
CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o manager-crbc /app/cmd/main.go

### Explanation
CGO_ENABLED=0 — это переменная окружения, которая говорит компилятору Go не использовать CGO (механизм вызова C-кода из Go) и собирать бинарник статически. Это значит, что все необходимые библиотеки будут "вшиты" в бинарный файл, и он не будет зависеть от внешних динамических библиотек ОС, таких как glibc или musl.

Почему это важно для Docker и Alpine
Alpine Linux (часто используется как базовый образ для контейнеров) использует musl, а не стандартный glibc.

Если вы собираете Go-приложение с включённым CGO (CGO_ENABLED=1), то результат будет зависеть от системных C-библиотек (например, glibc), которых нет в Alpine или в минимальных образах вроде scratch.

В результате, при запуске контейнера с таким бинарником, вы получите ошибку no such file or directory, хотя файл на месте — на самом деле не хватает нужной динамической библиотеки.
