Dockerfile 

# Use the official MongoDB image
FROM mongo:latest

RUN apt-get update && apt-get install -y \
    procps net-tools curl

# Expose the MongoDB port
EXPOSE 27017

CMD ["mongod", "--bind_ip_all"]

mongosh how to:

test> show dbs
admin      8.00 KiB
config    12.00 KiB
k8s-data   8.00 KiB
local      8.00 KiB

test> use k8s-data
switched to db k8s-data

k8s-data> show collections
nssaslice
k8s-data>

db.<collection_name>.find()

# get data from collection nssaslice
k8s-data> db.nssaslice.find()

k8s-data> db.nssaslice.find()
[
  {
    _id: ObjectId('67ceeeebdb084cbae8747bd5'),
    namespace: 'istio-opera',
    service_accounts: [ 'default', 'test-sa', 'test-sa-1' ]
  },
  {
    _id: ObjectId('67ceeeebdb084cbae8747bd6'),
    namespace: 'manager-ns',
    service_accounts: [ 'default', 'manager-ns' ]
  },
  {
    _id: ObjectId('67ceeeebdb084cbae8747bd7'),
    namespace: 'test-ns-10',
    service_accounts: [ 'default', 'test-ns-10' ]


> GigaChat:
Для работы с MongoDB внутри контейнера Docker можно использовать следующие основные команды. Вот примерный порядок действий и команд:

1. Подключение к контейнеру

Предположим, у вас уже запущен контейнер с MongoDB. Чтобы подключиться к нему, выполните команду:

docker exec -it <container_name_or_id> bash


Здесь <container_name_or_id> — это имя или ID вашего контейнера с MongoDB.

2. Запуск mongo shell

После подключения к контейнеру вам нужно запустить оболочку mongo:

mongo


Теперь вы находитесь в интерактивной среде MongoDB.

Основные команды для работы с базами данных и коллекциями

Просмотр всех баз данных:

show dbs


Переключение на конкретную базу данных:

use <database_name>


Замените <database_name> на название нужной базы данных.

Просмотр всех коллекций в текущей базе данных:

show collections


Получение данных из конкретной коллекции:

db.<collection_name>.find()


Это команда вернет все документы из указанной коллекции. Вы можете добавить фильтры, сортировку и другие параметры:

db.<collection_name>.find({ field: 'value' }).sort({ date: -1 })


Пример: выбрать все записи, где поле name равно "John":

db.users.find({ name: "John" })


Вставка документа в коллекцию:

db.<collection_name>.insertOne({
  field1: "value1",
  field2: "value2"
})


или для вставки нескольких документов сразу:

db.<collection_name>.insertMany([
  { field1: "value1", field2: "value2" },
  { field1: "value3", field2: "value4" }
])


Обновление документа в коллекции:

db.<collection_name>.updateOne(
  { field: "value" }, // условие поиска
  { $set: { newField: "newValue" } } // обновления
)


Удаление документа из коллекции:

db.<collection_name>.deleteOne({ field: "value" }) // удаление одного документа
db.<collection_name>.deleteMany({}) // удаление всех документов


Эти команды помогут вам управлять базами данных, коллекциями и данными в MongoDB.

> Vlad:
у меня есть только mongod

> GigaChat:
Если у тебя установлен только демон сервера MongoDB (mongod), ты можешь запускать MongoDB и взаимодействовать с ним через командную строку. Вот основные шаги и команды для начала работы:

1. Запусти сервер MongoDB

Убедись, что mongod запущен. Обычно это делается командой:

mongod


Если сервер запустился успешно, он будет работать в фоновом режиме и принимать запросы от клиентов.

2. Подключайся к MongoDB черезmongo

Запусти клиентскую консоль MongoDB, чтобы начать работу с базой данных:

mongo


Эта команда откроет интерактивную среду оболочки MongoDB, откуда ты сможешь выполнять различные операции с базой данных.

Основные команды для работы с базами данных и коллекциями

Просмотр всех баз данных:

show dbs


Переключение на конкретную базу данных:

use <database_name>


Замените <database_name> на название нужной базы данных.

Просмотр всех коллекций в текущей базе данных:

show collections


Получение данных из конкретной коллекции:

db.<collection_name>.find()


Это команда вернет все документы из указанной коллекции. Ты можешь добавлять фильтры, сортировки и другие параметры:

db.<collection_name>.find({ field: 'value' }).sort({ date: -1 })


Пример: выбрать все записи, где поле name равно "John":

db.users.find({ name: "John" })


Вставка документа в коллекцию:

db.<collection_name>.insertOne({
  field1: "value1",
  field2: "value2"
})


Или для вставки нескольких документов одновременно:

db.<collection_name>.insertMany([
  { field1: "value1", field2: "value2" },
  { field1: "value3", field2: "value4" }
])


Обновление документа в коллекции:

db.<collection_name>.updateOne(
  { field: "value" }, // условие поиска
  { $set: { newField: "newValue" } } // обновления
)


Удаление документа из коллекции:

db.<collection_name>.deleteOne({ field: "value" }) // удаление одного документа
db.<collection_name>.deleteMany({}) // удаление всех документов


